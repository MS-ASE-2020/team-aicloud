{
	"info": {
		"_postman_id": "fde775d4-4271-43bd-8ea5-5667f6ed5b29",
		"name": "Rishi Backend Interaction",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Login",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "username",
							"value": "mhzhou",
							"type": "text"
						},
						{
							"key": "password",
							"value": "abcdefg",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "127.0.0.1:8000/api/login/",
					"host": [
						"127",
						"0",
						"0",
						"1"
					],
					"port": "8000",
					"path": [
						"api",
						"login",
						""
					]
				}
			},
			"response": [
				{
					"name": "Login",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "username",
									"value": "mhzhou",
									"type": "text"
								},
								{
									"key": "password",
									"value": "abcdefg",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "127.0.0.1:8000/api/login/",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8000",
							"path": [
								"api",
								"login",
								""
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Date",
							"value": "Wed, 04 Nov 2020 05:25:58 GMT"
						},
						{
							"key": "Server",
							"value": "WSGIServer/0.2 CPython/3.7.9"
						},
						{
							"key": "Content-Type",
							"value": "application/json"
						},
						{
							"key": "Vary",
							"value": "Accept, Origin"
						},
						{
							"key": "Allow",
							"value": "POST, OPTIONS"
						},
						{
							"key": "X-Frame-Options",
							"value": "DENY"
						},
						{
							"key": "Content-Length",
							"value": "201"
						},
						{
							"key": "X-Content-Type-Options",
							"value": "nosniff"
						},
						{
							"key": "Referrer-Policy",
							"value": "same-origin"
						}
					],
					"cookie": [],
					"body": "{\n    \"token\": \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VyX2lkIjoxLCJ1c2VybmFtZSI6Im1oemhvdSIsImV4cCI6MTYwNDQ2Nzg1OCwiZW1haWwiOiJtaHpob3U5OUBvdXRsb29rLmNvbSJ9.c04AOVQOd8p6rqC9_0_af7sclA6UeC8IUsPY0XRZ5V8\"\n}"
				}
			]
		},
		{
			"name": "Create Dataset",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "3a05c744-6fbc-46fa-9404-005b5a83d6cd",
						"exec": [
							"var authServiceUrl = pm.globals.get('authService');\r",
							"var username = pm.globals.get('username');\r",
							"var password = pm.globals.get('password');\r",
							"\r",
							"var sdk = require('postman-collection');\r",
							"\r",
							"pm.sendRequest(new sdk.Request({\r",
							"    url: authServiceUrl,\r",
							"    method: \"POST\",\r",
							"    header: [\r",
							"        new sdk.Header({\r",
							"            key: 'content-type',\r",
							"            value: 'application/json'\r",
							"        }),\r",
							"        new sdk.Header({\r",
							"            key: 'acccept',\r",
							"            value: 'application/json'\r",
							"        }),\r",
							"    ],\r",
							"    body: {\r",
							"        mode: 'formdata',\r",
							"        formdata: [\r",
							"            {\r",
							"                \"key\": \"username\",\r",
							"                \"value\": username,\r",
							"                \"type\": \"text\"\r",
							"            },\r",
							"            {\r",
							"                \"key\": \"password\",\r",
							"                \"value\": password,\r",
							"                \"type\": \"text\"         \r",
							"            }\r",
							"        ]\r",
							"    } \r",
							"}), function(err, response) {\r",
							"    if (err) {\r",
							"        throw err;\r",
							"    }\r",
							"    if (response.code != 200) {\r",
							"        throw new Error('Could not log in.');\r",
							"    }\r",
							"    console.log(response.json())\r",
							"    var token = response.json().token\r",
							"    pm.globals.set(\"jwt_token\", token);\r",
							"    console.log(`New token has been set: ${token}`);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "JWT {{jwt_token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "test_dataset",
							"type": "text"
						},
						{
							"key": "upload",
							"type": "file",
							"src": "/C:/Users/mhzho/Documents/foo.csv"
						}
					],
					"options": {
						"formdata": {}
					}
				},
				"url": {
					"raw": "http://127.0.0.1:8000/api/data/",
					"protocol": "http",
					"host": [
						"127",
						"0",
						"0",
						"1"
					],
					"port": "8000",
					"path": [
						"api",
						"data",
						""
					]
				}
			},
			"response": [
				{
					"name": "Create Dataset",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "JWT {{jwt_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "name",
									"value": "test_dataset",
									"type": "text"
								},
								{
									"key": "upload",
									"type": "file",
									"src": "/C:/Users/mhzho/Documents/foo.csv"
								}
							],
							"options": {
								"formdata": {}
							}
						},
						"url": {
							"raw": "http://127.0.0.1:8000/api/data/",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8000",
							"path": [
								"api",
								"data",
								""
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Date",
							"value": "Wed, 04 Nov 2020 05:26:16 GMT"
						},
						{
							"key": "Server",
							"value": "WSGIServer/0.2 CPython/3.7.9"
						},
						{
							"key": "Content-Type",
							"value": "application/json"
						},
						{
							"key": "Vary",
							"value": "Accept, Origin"
						},
						{
							"key": "Allow",
							"value": "GET, POST, HEAD, OPTIONS"
						},
						{
							"key": "X-Frame-Options",
							"value": "DENY"
						},
						{
							"key": "Content-Length",
							"value": "201"
						},
						{
							"key": "X-Content-Type-Options",
							"value": "nosniff"
						},
						{
							"key": "Referrer-Policy",
							"value": "same-origin"
						}
					],
					"cookie": [],
					"body": "{\n    \"data\": {\n        \"id\": 6,\n        \"name\": \"test_dataset\",\n        \"uuid\": \"d5ec2efb-61a3-4983-86bd-c94fc11e47a5\",\n        \"time_created\": \"2020-11-04T13:26:12.482785+08:00\",\n        \"upload\": \"/uploads/foo_TlyY5cS.csv\",\n        \"related_user\": 1\n    },\n    \"status\": 201\n}"
				}
			]
		},
		{
			"name": "Get All Datasets",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "ed4a1182-d5fd-40cd-b63d-a332891d44e6",
						"exec": [
							"var authServiceUrl = pm.globals.get('authService');\r",
							"var username = pm.globals.get('username');\r",
							"var password = pm.globals.get('password');\r",
							"\r",
							"var sdk = require('postman-collection');\r",
							"\r",
							"pm.sendRequest(new sdk.Request({\r",
							"    url: authServiceUrl,\r",
							"    method: \"POST\",\r",
							"    header: [\r",
							"        new sdk.Header({\r",
							"            key: 'content-type',\r",
							"            value: 'application/json'\r",
							"        }),\r",
							"        new sdk.Header({\r",
							"            key: 'acccept',\r",
							"            value: 'application/json'\r",
							"        }),\r",
							"    ],\r",
							"    body: {\r",
							"        mode: 'formdata',\r",
							"        formdata: [\r",
							"            {\r",
							"                \"key\": \"username\",\r",
							"                \"value\": username,\r",
							"                \"type\": \"text\"\r",
							"            },\r",
							"            {\r",
							"                \"key\": \"password\",\r",
							"                \"value\": password,\r",
							"                \"type\": \"text\"         \r",
							"            }\r",
							"        ]\r",
							"    } \r",
							"}), function(err, response) {\r",
							"    if (err) {\r",
							"        throw err;\r",
							"    }\r",
							"    if (response.code != 200) {\r",
							"        throw new Error('Could not log in.');\r",
							"    }\r",
							"    console.log(response.json())\r",
							"    var token = response.json().token\r",
							"    pm.globals.set(\"jwt_token\", token);\r",
							"    console.log(`New token has been set: ${token}`);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "JWT {{jwt_token}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "http://127.0.0.1:8000/api/data/",
					"protocol": "http",
					"host": [
						"127",
						"0",
						"0",
						"1"
					],
					"port": "8000",
					"path": [
						"api",
						"data",
						""
					]
				}
			},
			"response": [
				{
					"name": "Get All Datasets",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "JWT {{jwt_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://127.0.0.1:8000/api/data/",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8000",
							"path": [
								"api",
								"data",
								""
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Date",
							"value": "Wed, 04 Nov 2020 05:26:32 GMT"
						},
						{
							"key": "Server",
							"value": "WSGIServer/0.2 CPython/3.7.9"
						},
						{
							"key": "Content-Type",
							"value": "application/json"
						},
						{
							"key": "Vary",
							"value": "Accept, Origin"
						},
						{
							"key": "Allow",
							"value": "GET, POST, HEAD, OPTIONS"
						},
						{
							"key": "X-Frame-Options",
							"value": "DENY"
						},
						{
							"key": "Content-Length",
							"value": "1059"
						},
						{
							"key": "X-Content-Type-Options",
							"value": "nosniff"
						},
						{
							"key": "Referrer-Policy",
							"value": "same-origin"
						}
					],
					"cookie": [],
					"body": "{\n    \"data\": [\n        {\n            \"id\": 1,\n            \"name\": \"test_dataset\",\n            \"uuid\": \"752f5952-80b1-4e1d-af00-11969d239f97\",\n            \"time_created\": \"2020-11-03T21:58:43.152116+08:00\",\n            \"upload\": \"/uploads/foo_LdAdFwR.csv\",\n            \"related_user\": 1\n        },\n        {\n            \"id\": 2,\n            \"name\": \"test_dataset\",\n            \"uuid\": \"9dc1276a-2610-47ab-a340-afb10a866479\",\n            \"time_created\": \"2020-11-03T22:09:18.302431+08:00\",\n            \"upload\": \"/uploads/foo_sFkHPFc.csv\",\n            \"related_user\": 1\n        },\n        {\n            \"id\": 3,\n            \"name\": \"test_dataset\",\n            \"uuid\": \"36de0e22-6616-4b48-89ee-7090bf525c1c\",\n            \"time_created\": \"2020-11-04T02:51:30.891662+08:00\",\n            \"upload\": null,\n            \"related_user\": 1\n        },\n        {\n            \"id\": 4,\n            \"name\": \"test_dataset\",\n            \"uuid\": \"5313dc1b-8834-451a-a55d-bc30b0568ce4\",\n            \"time_created\": \"2020-11-04T02:52:25.599872+08:00\",\n            \"upload\": null,\n            \"related_user\": 1\n        },\n        {\n            \"id\": 5,\n            \"name\": \"test_dataset\",\n            \"uuid\": \"f388cb61-b5b3-47c6-b40a-54445985c5b7\",\n            \"time_created\": \"2020-11-04T02:54:02.415925+08:00\",\n            \"upload\": \"/uploads/foo_64WunbF.csv\",\n            \"related_user\": 1\n        },\n        {\n            \"id\": 6,\n            \"name\": \"test_dataset\",\n            \"uuid\": \"d5ec2efb-61a3-4983-86bd-c94fc11e47a5\",\n            \"time_created\": \"2020-11-04T13:26:12.482785+08:00\",\n            \"upload\": \"/uploads/foo_TlyY5cS.csv\",\n            \"related_user\": 1\n        }\n    ],\n    \"status\": 200\n}"
				}
			]
		},
		{
			"name": "Get Specify Dataset",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "edb2a743-44ef-46a7-9f6b-93784ec24713",
						"exec": [
							"var authServiceUrl = pm.globals.get('authService');\r",
							"var username = pm.globals.get('username');\r",
							"var password = pm.globals.get('password');\r",
							"\r",
							"var sdk = require('postman-collection');\r",
							"\r",
							"pm.sendRequest(new sdk.Request({\r",
							"    url: authServiceUrl,\r",
							"    method: \"POST\",\r",
							"    header: [\r",
							"        new sdk.Header({\r",
							"            key: 'content-type',\r",
							"            value: 'application/json'\r",
							"        }),\r",
							"        new sdk.Header({\r",
							"            key: 'acccept',\r",
							"            value: 'application/json'\r",
							"        }),\r",
							"    ],\r",
							"    body: {\r",
							"        mode: 'formdata',\r",
							"        formdata: [\r",
							"            {\r",
							"                \"key\": \"username\",\r",
							"                \"value\": username,\r",
							"                \"type\": \"text\"\r",
							"            },\r",
							"            {\r",
							"                \"key\": \"password\",\r",
							"                \"value\": password,\r",
							"                \"type\": \"text\"         \r",
							"            }\r",
							"        ]\r",
							"    } \r",
							"}), function(err, response) {\r",
							"    if (err) {\r",
							"        throw err;\r",
							"    }\r",
							"    if (response.code != 200) {\r",
							"        throw new Error('Could not log in.');\r",
							"    }\r",
							"    console.log(response.json())\r",
							"    var token = response.json().token\r",
							"    pm.globals.set(\"jwt_token\", token);\r",
							"    console.log(`New token has been set: ${token}`);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "JWT {{jwt_token}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "http://127.0.0.1:8000/api/data/1/",
					"protocol": "http",
					"host": [
						"127",
						"0",
						"0",
						"1"
					],
					"port": "8000",
					"path": [
						"api",
						"data",
						"1",
						""
					]
				}
			},
			"response": [
				{
					"name": "Get Specify Dataset",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "JWT {{jwt_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://127.0.0.1:8000/api/data/1/",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8000",
							"path": [
								"api",
								"data",
								"1",
								""
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Date",
							"value": "Wed, 04 Nov 2020 05:26:58 GMT"
						},
						{
							"key": "Server",
							"value": "WSGIServer/0.2 CPython/3.7.9"
						},
						{
							"key": "Content-Type",
							"value": "application/json"
						},
						{
							"key": "Vary",
							"value": "Accept, Origin"
						},
						{
							"key": "Allow",
							"value": "GET, HEAD, OPTIONS"
						},
						{
							"key": "X-Frame-Options",
							"value": "DENY"
						},
						{
							"key": "Content-Length",
							"value": "316"
						},
						{
							"key": "X-Content-Type-Options",
							"value": "nosniff"
						},
						{
							"key": "Referrer-Policy",
							"value": "same-origin"
						}
					],
					"cookie": [],
					"body": "{\n    \"data\": {\n        \"id\": 1,\n        \"name\": \"test_dataset\",\n        \"uuid\": \"752f5952-80b1-4e1d-af00-11969d239f97\",\n        \"time_created\": \"2020-11-03T21:58:43.152116+08:00\",\n        \"upload\": \"/uploads/foo_LdAdFwR.csv\",\n        \"related_user\": 1\n    },\n    \"header\": [\n        {\n            \"index\": 0,\n            \"label\": \"Unknown-0\"\n        },\n        {\n            \"index\": 1,\n            \"label\": \"TimeSeries\"\n        },\n        {\n            \"index\": 2,\n            \"label\": \"TimeSeriesValues\"\n        }\n    ],\n    \"status\": 200\n}"
				}
			]
		},
		{
			"name": "Create Project",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "d773b8ac-b536-4aa8-ba04-3b70cb723017",
						"exec": [
							"var authServiceUrl = pm.globals.get('authService');\r",
							"var username = pm.globals.get('username');\r",
							"var password = pm.globals.get('password');\r",
							"\r",
							"var sdk = require('postman-collection');\r",
							"\r",
							"pm.sendRequest(new sdk.Request({\r",
							"    url: authServiceUrl,\r",
							"    method: \"POST\",\r",
							"    header: [\r",
							"        new sdk.Header({\r",
							"            key: 'content-type',\r",
							"            value: 'application/json'\r",
							"        }),\r",
							"        new sdk.Header({\r",
							"            key: 'acccept',\r",
							"            value: 'application/json'\r",
							"        }),\r",
							"    ],\r",
							"    body: {\r",
							"        mode: 'formdata',\r",
							"        formdata: [\r",
							"            {\r",
							"                \"key\": \"username\",\r",
							"                \"value\": username,\r",
							"                \"type\": \"text\"\r",
							"            },\r",
							"            {\r",
							"                \"key\": \"password\",\r",
							"                \"value\": password,\r",
							"                \"type\": \"text\"         \r",
							"            }\r",
							"        ]\r",
							"    } \r",
							"}), function(err, response) {\r",
							"    if (err) {\r",
							"        throw err;\r",
							"    }\r",
							"    if (response.code != 200) {\r",
							"        throw new Error('Could not log in.');\r",
							"    }\r",
							"    console.log(response.json())\r",
							"    var token = response.json().token\r",
							"    pm.globals.set(\"jwt_token\", token);\r",
							"    console.log(`New token has been set: ${token}`);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "JWT {{jwt_token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "data_id",
							"value": "2",
							"type": "text"
						},
						{
							"key": "name",
							"value": "test_project3",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://127.0.0.1:8000/api/project/",
					"protocol": "http",
					"host": [
						"127",
						"0",
						"0",
						"1"
					],
					"port": "8000",
					"path": [
						"api",
						"project",
						""
					]
				}
			},
			"response": [
				{
					"name": "Create Project",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "JWT {{jwt_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "data_id",
									"value": "2",
									"type": "text"
								},
								{
									"key": "name",
									"value": "test_project3",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://127.0.0.1:8000/api/project/",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8000",
							"path": [
								"api",
								"project",
								""
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Date",
							"value": "Wed, 04 Nov 2020 05:27:11 GMT"
						},
						{
							"key": "Server",
							"value": "WSGIServer/0.2 CPython/3.7.9"
						},
						{
							"key": "Content-Type",
							"value": "application/json"
						},
						{
							"key": "Vary",
							"value": "Accept, Origin"
						},
						{
							"key": "Allow",
							"value": "GET, POST, HEAD, OPTIONS"
						},
						{
							"key": "X-Frame-Options",
							"value": "DENY"
						},
						{
							"key": "Content-Length",
							"value": "137"
						},
						{
							"key": "X-Content-Type-Options",
							"value": "nosniff"
						},
						{
							"key": "Referrer-Policy",
							"value": "same-origin"
						}
					],
					"cookie": [],
					"body": "{\n    \"data\": {\n        \"id\": 9,\n        \"name\": \"test_project3\",\n        \"time_created\": \"2020-11-04T13:27:10.963168+08:00\",\n        \"related_user\": 1,\n        \"related_data\": 2\n    },\n    \"status\": 201\n}"
				}
			]
		},
		{
			"name": "Get All Projects",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "d861892d-740e-4b70-ad49-4bbcb9deae10",
						"exec": [
							"var authServiceUrl = pm.globals.get('authService');\r",
							"var username = pm.globals.get('username');\r",
							"var password = pm.globals.get('password');\r",
							"\r",
							"var sdk = require('postman-collection');\r",
							"\r",
							"pm.sendRequest(new sdk.Request({\r",
							"    url: authServiceUrl,\r",
							"    method: \"POST\",\r",
							"    header: [\r",
							"        new sdk.Header({\r",
							"            key: 'content-type',\r",
							"            value: 'application/json'\r",
							"        }),\r",
							"        new sdk.Header({\r",
							"            key: 'acccept',\r",
							"            value: 'application/json'\r",
							"        }),\r",
							"    ],\r",
							"    body: {\r",
							"        mode: 'formdata',\r",
							"        formdata: [\r",
							"            {\r",
							"                \"key\": \"username\",\r",
							"                \"value\": username,\r",
							"                \"type\": \"text\"\r",
							"            },\r",
							"            {\r",
							"                \"key\": \"password\",\r",
							"                \"value\": password,\r",
							"                \"type\": \"text\"         \r",
							"            }\r",
							"        ]\r",
							"    } \r",
							"}), function(err, response) {\r",
							"    if (err) {\r",
							"        throw err;\r",
							"    }\r",
							"    if (response.code != 200) {\r",
							"        throw new Error('Could not log in.');\r",
							"    }\r",
							"    console.log(response.json())\r",
							"    var token = response.json().token\r",
							"    pm.globals.set(\"jwt_token\", token);\r",
							"    console.log(`New token has been set: ${token}`);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"strictSSL": false
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"type": "text",
						"value": "JWT {{jwt_token}}"
					}
				],
				"url": {
					"raw": "http://127.0.0.1:8000/api/project/",
					"protocol": "http",
					"host": [
						"127",
						"0",
						"0",
						"1"
					],
					"port": "8000",
					"path": [
						"api",
						"project",
						""
					]
				}
			},
			"response": [
				{
					"name": "Get All Projects",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "JWT {{jwt_token}}"
							}
						],
						"url": {
							"raw": "http://127.0.0.1:8000/api/project/",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8000",
							"path": [
								"api",
								"project",
								""
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Date",
							"value": "Wed, 04 Nov 2020 05:27:28 GMT"
						},
						{
							"key": "Server",
							"value": "WSGIServer/0.2 CPython/3.7.9"
						},
						{
							"key": "Content-Type",
							"value": "application/json"
						},
						{
							"key": "Vary",
							"value": "Accept, Origin"
						},
						{
							"key": "Allow",
							"value": "GET, POST, HEAD, OPTIONS"
						},
						{
							"key": "X-Frame-Options",
							"value": "DENY"
						},
						{
							"key": "Content-Length",
							"value": "1066"
						},
						{
							"key": "X-Content-Type-Options",
							"value": "nosniff"
						},
						{
							"key": "Referrer-Policy",
							"value": "same-origin"
						}
					],
					"cookie": [],
					"body": "{\n    \"data\": [\n        {\n            \"id\": 1,\n            \"name\": \"test_project\",\n            \"time_created\": \"2020-11-03T22:56:34.848061+08:00\",\n            \"related_user\": 1,\n            \"related_data\": 1\n        },\n        {\n            \"id\": 2,\n            \"name\": \"test_project2\",\n            \"time_created\": \"2020-11-03T23:02:05.495172+08:00\",\n            \"related_user\": 1,\n            \"related_data\": 2\n        },\n        {\n            \"id\": 3,\n            \"name\": \"test_project3\",\n            \"time_created\": \"2020-11-04T02:43:43.810757+08:00\",\n            \"related_user\": 1,\n            \"related_data\": 2\n        },\n        {\n            \"id\": 4,\n            \"name\": \"test_project3\",\n            \"time_created\": \"2020-11-04T02:44:02.153379+08:00\",\n            \"related_user\": 1,\n            \"related_data\": 2\n        },\n        {\n            \"id\": 5,\n            \"name\": \"test_project3\",\n            \"time_created\": \"2020-11-04T02:44:56.249824+08:00\",\n            \"related_user\": 1,\n            \"related_data\": 2\n        },\n        {\n            \"id\": 6,\n            \"name\": \"test_project3\",\n            \"time_created\": \"2020-11-04T05:08:36.015517+08:00\",\n            \"related_user\": 1,\n            \"related_data\": 2\n        },\n        {\n            \"id\": 7,\n            \"name\": \"test_project3\",\n            \"time_created\": \"2020-11-04T05:10:12.879011+08:00\",\n            \"related_user\": 1,\n            \"related_data\": 2\n        },\n        {\n            \"id\": 8,\n            \"name\": \"test_project3\",\n            \"time_created\": \"2020-11-04T05:10:56.288445+08:00\",\n            \"related_user\": 1,\n            \"related_data\": 2\n        },\n        {\n            \"id\": 9,\n            \"name\": \"test_project3\",\n            \"time_created\": \"2020-11-04T13:27:10.963168+08:00\",\n            \"related_user\": 1,\n            \"related_data\": 2\n        }\n    ],\n    \"status\": 200\n}"
				}
			]
		},
		{
			"name": "Get Specify Project",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "48b109db-a766-492b-b85a-f7329abc3fa9",
						"exec": [
							"var authServiceUrl = pm.globals.get('authService');\r",
							"var username = pm.globals.get('username');\r",
							"var password = pm.globals.get('password');\r",
							"\r",
							"var sdk = require('postman-collection');\r",
							"\r",
							"pm.sendRequest(new sdk.Request({\r",
							"    url: authServiceUrl,\r",
							"    method: \"POST\",\r",
							"    header: [\r",
							"        new sdk.Header({\r",
							"            key: 'content-type',\r",
							"            value: 'application/json'\r",
							"        }),\r",
							"        new sdk.Header({\r",
							"            key: 'acccept',\r",
							"            value: 'application/json'\r",
							"        }),\r",
							"    ],\r",
							"    body: {\r",
							"        mode: 'formdata',\r",
							"        formdata: [\r",
							"            {\r",
							"                \"key\": \"username\",\r",
							"                \"value\": username,\r",
							"                \"type\": \"text\"\r",
							"            },\r",
							"            {\r",
							"                \"key\": \"password\",\r",
							"                \"value\": password,\r",
							"                \"type\": \"text\"         \r",
							"            }\r",
							"        ]\r",
							"    } \r",
							"}), function(err, response) {\r",
							"    if (err) {\r",
							"        throw err;\r",
							"    }\r",
							"    if (response.code != 200) {\r",
							"        throw new Error('Could not log in.');\r",
							"    }\r",
							"    console.log(response.json())\r",
							"    var token = response.json().token\r",
							"    pm.globals.set(\"jwt_token\", token);\r",
							"    console.log(`New token has been set: ${token}`);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "JWT {{jwt_token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "formdata",
					"formdata": []
				},
				"url": {
					"raw": "http://127.0.0.1:8000/api/project/1/",
					"protocol": "http",
					"host": [
						"127",
						"0",
						"0",
						"1"
					],
					"port": "8000",
					"path": [
						"api",
						"project",
						"1",
						""
					]
				}
			},
			"response": [
				{
					"name": "Get Specify Project",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "JWT {{jwt_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "http://127.0.0.1:8000/api/project/1/",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8000",
							"path": [
								"api",
								"project",
								"1",
								""
							]
						}
					},
					"_postman_previewlanguage": null,
					"header": null,
					"cookie": [],
					"body": null
				}
			]
		},
		{
			"name": "Get Specify Dataset Header",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "dee1fe1d-e73c-43fc-b51e-299ccedd571e",
						"exec": [
							"var authServiceUrl = pm.globals.get('authService');\r",
							"var username = pm.globals.get('username');\r",
							"var password = pm.globals.get('password');\r",
							"\r",
							"var sdk = require('postman-collection');\r",
							"\r",
							"pm.sendRequest(new sdk.Request({\r",
							"    url: authServiceUrl,\r",
							"    method: \"POST\",\r",
							"    header: [\r",
							"        new sdk.Header({\r",
							"            key: 'content-type',\r",
							"            value: 'application/json'\r",
							"        }),\r",
							"        new sdk.Header({\r",
							"            key: 'acccept',\r",
							"            value: 'application/json'\r",
							"        }),\r",
							"    ],\r",
							"    body: {\r",
							"        mode: 'formdata',\r",
							"        formdata: [\r",
							"            {\r",
							"                \"key\": \"username\",\r",
							"                \"value\": username,\r",
							"                \"type\": \"text\"\r",
							"            },\r",
							"            {\r",
							"                \"key\": \"password\",\r",
							"                \"value\": password,\r",
							"                \"type\": \"text\"         \r",
							"            }\r",
							"        ]\r",
							"    } \r",
							"}), function(err, response) {\r",
							"    if (err) {\r",
							"        throw err;\r",
							"    }\r",
							"    if (response.code != 200) {\r",
							"        throw new Error('Could not log in.');\r",
							"    }\r",
							"    console.log(response.json())\r",
							"    var token = response.json().token\r",
							"    pm.globals.set(\"jwt_token\", token);\r",
							"    console.log(`New token has been set: ${token}`);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "JWT {{jwt_token}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "http://127.0.0.1:8000/api/data/1/",
					"protocol": "http",
					"host": [
						"127",
						"0",
						"0",
						"1"
					],
					"port": "8000",
					"path": [
						"api",
						"data",
						"1",
						""
					]
				}
			},
			"response": [
				{
					"name": "Get Specify Dataset Header",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "JWT {{jwt_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://127.0.0.1:8000/api/data/1/",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8000",
							"path": [
								"api",
								"data",
								"1",
								""
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Date",
							"value": "Wed, 04 Nov 2020 05:27:50 GMT"
						},
						{
							"key": "Server",
							"value": "WSGIServer/0.2 CPython/3.7.9"
						},
						{
							"key": "Content-Type",
							"value": "application/json"
						},
						{
							"key": "Vary",
							"value": "Accept, Origin"
						},
						{
							"key": "Allow",
							"value": "GET, HEAD, OPTIONS"
						},
						{
							"key": "X-Frame-Options",
							"value": "DENY"
						},
						{
							"key": "Content-Length",
							"value": "316"
						},
						{
							"key": "X-Content-Type-Options",
							"value": "nosniff"
						},
						{
							"key": "Referrer-Policy",
							"value": "same-origin"
						}
					],
					"cookie": [],
					"body": "{\n    \"data\": {\n        \"id\": 1,\n        \"name\": \"test_dataset\",\n        \"uuid\": \"752f5952-80b1-4e1d-af00-11969d239f97\",\n        \"time_created\": \"2020-11-03T21:58:43.152116+08:00\",\n        \"upload\": \"/uploads/foo_LdAdFwR.csv\",\n        \"related_user\": 1\n    },\n    \"header\": [\n        {\n            \"index\": 0,\n            \"label\": \"Unknown-0\"\n        },\n        {\n            \"index\": 1,\n            \"label\": \"TimeSeries\"\n        },\n        {\n            \"index\": 2,\n            \"label\": \"TimeSeriesValues\"\n        }\n    ],\n    \"status\": 200\n}"
				}
			]
		},
		{
			"name": "Get All Model Names and Descriptions",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://127.0.0.1:8000/api/model/",
					"protocol": "http",
					"host": [
						"127",
						"0",
						"0",
						"1"
					],
					"port": "8000",
					"path": [
						"api",
						"model",
						""
					]
				}
			},
			"response": [
				{
					"name": "Get All Model Names and Descriptions",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://127.0.0.1:8000/api/model/",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8000",
							"path": [
								"api",
								"model",
								""
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Date",
							"value": "Wed, 04 Nov 2020 05:28:20 GMT"
						},
						{
							"key": "Server",
							"value": "WSGIServer/0.2 CPython/3.7.9"
						},
						{
							"key": "Content-Type",
							"value": "application/json"
						},
						{
							"key": "Vary",
							"value": "Accept, Origin"
						},
						{
							"key": "Allow",
							"value": "OPTIONS, GET"
						},
						{
							"key": "X-Frame-Options",
							"value": "DENY"
						},
						{
							"key": "Content-Length",
							"value": "358"
						},
						{
							"key": "X-Content-Type-Options",
							"value": "nosniff"
						},
						{
							"key": "Referrer-Policy",
							"value": "same-origin"
						}
					],
					"cookie": [],
					"body": "{\n    \"data\": {\n        \"ARIMA\": \"=> ARIMA\",\n        \"AdaptiveAverageNModel\": \"=> AdaptiveAverageNModel\",\n        \"AdaptiveMaxNModel\": \"=> AdaptiveMaxNModel\",\n        \"LinearFitModel\": \"=> LinearFitModel\",\n        \"LstmLongModel\": \"=> LstmLongModel\",\n        \"LstmModel\": \"=> LstmModel\",\n        \"MaxNModel\": \"=> MaxNModel\",\n        \"NewRandomArrivalModel\": \"=> NewRandomArrivalModel\",\n        \"RandomArrivalModel\": \"=> RandomArrivalModel\"\n    },\n    \"status\": 200\n}"
				}
			]
		},
		{
			"name": "Get Hyperparams Description By Model Name",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://127.0.0.1:8000/api/model/MaxNModel/",
					"protocol": "http",
					"host": [
						"127",
						"0",
						"0",
						"1"
					],
					"port": "8000",
					"path": [
						"api",
						"model",
						"MaxNModel",
						""
					]
				}
			},
			"response": [
				{
					"name": "Get Hyperparams Description By Model Name",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://127.0.0.1:8000/api/model/MaxNModel/",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8000",
							"path": [
								"api",
								"model",
								"MaxNModel",
								""
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Date",
							"value": "Wed, 04 Nov 2020 05:28:37 GMT"
						},
						{
							"key": "Server",
							"value": "WSGIServer/0.2 CPython/3.7.9"
						},
						{
							"key": "Content-Type",
							"value": "application/json"
						},
						{
							"key": "Vary",
							"value": "Accept, Origin"
						},
						{
							"key": "Allow",
							"value": "OPTIONS, GET"
						},
						{
							"key": "X-Frame-Options",
							"value": "DENY"
						},
						{
							"key": "Content-Length",
							"value": "141"
						},
						{
							"key": "X-Content-Type-Options",
							"value": "nosniff"
						},
						{
							"key": "Referrer-Policy",
							"value": "same-origin"
						}
					],
					"cookie": [],
					"body": "{\n    \"data\": [\n        {\n            \"name\": \"latest_n\",\n            \"description\": \"use the lastest n samples of the sequence for prediction\",\n            \"type\": \"int\",\n            \"default\": 3\n        }\n    ],\n    \"status\": 200\n}"
				}
			]
		},
		{
			"name": "Create Job For Specify Project",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "a13b1027-bf48-4ed9-a8ca-bc0aecdde54a",
						"exec": [
							"var authServiceUrl = pm.globals.get('authService');\r",
							"var username = pm.globals.get('username');\r",
							"var password = pm.globals.get('password');\r",
							"\r",
							"var sdk = require('postman-collection');\r",
							"\r",
							"pm.sendRequest(new sdk.Request({\r",
							"    url: authServiceUrl,\r",
							"    method: \"POST\",\r",
							"    header: [\r",
							"        new sdk.Header({\r",
							"            key: 'content-type',\r",
							"            value: 'application/json'\r",
							"        }),\r",
							"        new sdk.Header({\r",
							"            key: 'acccept',\r",
							"            value: 'application/json'\r",
							"        }),\r",
							"    ],\r",
							"    body: {\r",
							"        mode: 'formdata',\r",
							"        formdata: [\r",
							"            {\r",
							"                \"key\": \"username\",\r",
							"                \"value\": username,\r",
							"                \"type\": \"text\"\r",
							"            },\r",
							"            {\r",
							"                \"key\": \"password\",\r",
							"                \"value\": password,\r",
							"                \"type\": \"text\"         \r",
							"            }\r",
							"        ]\r",
							"    } \r",
							"}), function(err, response) {\r",
							"    if (err) {\r",
							"        throw err;\r",
							"    }\r",
							"    if (response.code != 200) {\r",
							"        throw new Error('Could not log in.');\r",
							"    }\r",
							"    console.log(response.json())\r",
							"    var token = response.json().token\r",
							"    pm.globals.set(\"jwt_token\", token);\r",
							"    console.log(`New token has been set: ${token}`);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "JWT {{jwt_token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "job_2",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://127.0.0.1:8000/api/project/1/job/",
					"protocol": "http",
					"host": [
						"127",
						"0",
						"0",
						"1"
					],
					"port": "8000",
					"path": [
						"api",
						"project",
						"1",
						"job",
						""
					]
				}
			},
			"response": [
				{
					"name": "Create Job For Specify Project",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "JWT {{jwt_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "name",
									"value": "job_2",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://127.0.0.1:8000/api/project/1/job/",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8000",
							"path": [
								"api",
								"project",
								"1",
								"job",
								""
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Date",
							"value": "Wed, 04 Nov 2020 05:28:50 GMT"
						},
						{
							"key": "Server",
							"value": "WSGIServer/0.2 CPython/3.7.9"
						},
						{
							"key": "Content-Type",
							"value": "application/json"
						},
						{
							"key": "Vary",
							"value": "Accept, Origin"
						},
						{
							"key": "Allow",
							"value": "GET, POST, HEAD, OPTIONS"
						},
						{
							"key": "X-Frame-Options",
							"value": "DENY"
						},
						{
							"key": "Content-Length",
							"value": "185"
						},
						{
							"key": "X-Content-Type-Options",
							"value": "nosniff"
						},
						{
							"key": "Referrer-Policy",
							"value": "same-origin"
						}
					],
					"cookie": [],
					"body": "{\n    \"data\": {\n        \"id\": 3,\n        \"name\": \"job_2\",\n        \"hyper_params\": null,\n        \"data_config\": null,\n        \"other_config\": null,\n        \"status\": 0,\n        \"time_created\": \"2020-11-04T13:28:50.446792+08:00\",\n        \"related_project\": 1\n    },\n    \"status\": 201\n}"
				}
			]
		},
		{
			"name": "Get All Jobs For Specify Project",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "108dcbd9-ab1a-47bc-b07f-7a0fbc030a1c",
						"exec": [
							"var authServiceUrl = pm.globals.get('authService');\r",
							"var username = pm.globals.get('username');\r",
							"var password = pm.globals.get('password');\r",
							"\r",
							"var sdk = require('postman-collection');\r",
							"\r",
							"pm.sendRequest(new sdk.Request({\r",
							"    url: authServiceUrl,\r",
							"    method: \"POST\",\r",
							"    header: [\r",
							"        new sdk.Header({\r",
							"            key: 'content-type',\r",
							"            value: 'application/json'\r",
							"        }),\r",
							"        new sdk.Header({\r",
							"            key: 'acccept',\r",
							"            value: 'application/json'\r",
							"        }),\r",
							"    ],\r",
							"    body: {\r",
							"        mode: 'formdata',\r",
							"        formdata: [\r",
							"            {\r",
							"                \"key\": \"username\",\r",
							"                \"value\": username,\r",
							"                \"type\": \"text\"\r",
							"            },\r",
							"            {\r",
							"                \"key\": \"password\",\r",
							"                \"value\": password,\r",
							"                \"type\": \"text\"         \r",
							"            }\r",
							"        ]\r",
							"    } \r",
							"}), function(err, response) {\r",
							"    if (err) {\r",
							"        throw err;\r",
							"    }\r",
							"    if (response.code != 200) {\r",
							"        throw new Error('Could not log in.');\r",
							"    }\r",
							"    console.log(response.json())\r",
							"    var token = response.json().token\r",
							"    pm.globals.set(\"jwt_token\", token);\r",
							"    console.log(`New token has been set: ${token}`);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"type": "text",
						"value": "JWT {{jwt_token}}"
					}
				],
				"body": {
					"mode": "formdata",
					"formdata": []
				},
				"url": {
					"raw": "http://127.0.0.1:8000/api/project/1/job/",
					"protocol": "http",
					"host": [
						"127",
						"0",
						"0",
						"1"
					],
					"port": "8000",
					"path": [
						"api",
						"project",
						"1",
						"job",
						""
					]
				}
			},
			"response": [
				{
					"name": "Get All Jobs For Specify Project",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "JWT {{jwt_token}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "http://127.0.0.1:8000/api/project/1/job/",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8000",
							"path": [
								"api",
								"project",
								"1",
								"job",
								""
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Date",
							"value": "Wed, 04 Nov 2020 05:29:01 GMT"
						},
						{
							"key": "Server",
							"value": "WSGIServer/0.2 CPython/3.7.9"
						},
						{
							"key": "Content-Type",
							"value": "application/json"
						},
						{
							"key": "Vary",
							"value": "Accept, Origin"
						},
						{
							"key": "Allow",
							"value": "GET, POST, HEAD, OPTIONS"
						},
						{
							"key": "X-Frame-Options",
							"value": "DENY"
						},
						{
							"key": "Content-Length",
							"value": "599"
						},
						{
							"key": "X-Content-Type-Options",
							"value": "nosniff"
						},
						{
							"key": "Referrer-Policy",
							"value": "same-origin"
						}
					],
					"cookie": [],
					"body": "{\n    \"data\": [\n        {\n            \"id\": 1,\n            \"name\": \"job_1\",\n            \"hyper_params\": \"gAJYAAAAAHEALg==\",\n            \"data_config\": \"gAJYAAAAAHEALg==\",\n            \"other_config\": \"gAJYAAAAAHEALg==\",\n            \"status\": 0,\n            \"time_created\": \"2020-11-04T10:36:23.567744+08:00\",\n            \"related_project\": 1\n        },\n        {\n            \"id\": 2,\n            \"name\": \"job_2\",\n            \"hyper_params\": \"gAJYAAAAAHEALg==\",\n            \"data_config\": \"gAJYAAAAAHEALg==\",\n            \"other_config\": \"gAJYAAAAAHEALg==\",\n            \"status\": 0,\n            \"time_created\": \"2020-11-04T10:36:37.697188+08:00\",\n            \"related_project\": 1\n        },\n        {\n            \"id\": 3,\n            \"name\": \"job_2\",\n            \"hyper_params\": null,\n            \"data_config\": null,\n            \"other_config\": null,\n            \"status\": 0,\n            \"time_created\": \"2020-11-04T13:28:50.446792+08:00\",\n            \"related_project\": 1\n        }\n    ],\n    \"status\": 200\n}"
				}
			]
		},
		{
			"name": "Get Specify Job For Specify Project",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "6ec18302-38ea-4db4-ba93-09588831a5cc",
						"exec": [
							"var authServiceUrl = pm.globals.get('authService');\r",
							"var username = pm.globals.get('username');\r",
							"var password = pm.globals.get('password');\r",
							"\r",
							"var sdk = require('postman-collection');\r",
							"\r",
							"pm.sendRequest(new sdk.Request({\r",
							"    url: authServiceUrl,\r",
							"    method: \"POST\",\r",
							"    header: [\r",
							"        new sdk.Header({\r",
							"            key: 'content-type',\r",
							"            value: 'application/json'\r",
							"        }),\r",
							"        new sdk.Header({\r",
							"            key: 'acccept',\r",
							"            value: 'application/json'\r",
							"        }),\r",
							"    ],\r",
							"    body: {\r",
							"        mode: 'formdata',\r",
							"        formdata: [\r",
							"            {\r",
							"                \"key\": \"username\",\r",
							"                \"value\": username,\r",
							"                \"type\": \"text\"\r",
							"            },\r",
							"            {\r",
							"                \"key\": \"password\",\r",
							"                \"value\": password,\r",
							"                \"type\": \"text\"         \r",
							"            }\r",
							"        ]\r",
							"    } \r",
							"}), function(err, response) {\r",
							"    if (err) {\r",
							"        throw err;\r",
							"    }\r",
							"    if (response.code != 200) {\r",
							"        throw new Error('Could not log in.');\r",
							"    }\r",
							"    console.log(response.json())\r",
							"    var token = response.json().token\r",
							"    pm.globals.set(\"jwt_token\", token);\r",
							"    console.log(`New token has been set: ${token}`);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"type": "text",
						"value": "JWT {{jwt_token}}"
					}
				],
				"body": {
					"mode": "formdata",
					"formdata": []
				},
				"url": {
					"raw": "http://127.0.0.1:8000/api/project/1/job/1/",
					"protocol": "http",
					"host": [
						"127",
						"0",
						"0",
						"1"
					],
					"port": "8000",
					"path": [
						"api",
						"project",
						"1",
						"job",
						"1",
						""
					]
				}
			},
			"response": [
				{
					"name": "Get Specify Job For Specify Project",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "JWT {{jwt_token}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "http://127.0.0.1:8000/api/project/1/job/1/",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8000",
							"path": [
								"api",
								"project",
								"1",
								"job",
								"1",
								""
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Date",
							"value": "Wed, 04 Nov 2020 05:29:12 GMT"
						},
						{
							"key": "Server",
							"value": "WSGIServer/0.2 CPython/3.7.9"
						},
						{
							"key": "Content-Type",
							"value": "application/json"
						},
						{
							"key": "Vary",
							"value": "Accept, Origin"
						},
						{
							"key": "Allow",
							"value": "GET, PUT, PATCH, HEAD, OPTIONS"
						},
						{
							"key": "X-Frame-Options",
							"value": "DENY"
						},
						{
							"key": "Content-Length",
							"value": "227"
						},
						{
							"key": "X-Content-Type-Options",
							"value": "nosniff"
						},
						{
							"key": "Referrer-Policy",
							"value": "same-origin"
						}
					],
					"cookie": [],
					"body": "{\n    \"data\": {\n        \"id\": 1,\n        \"name\": \"job_1\",\n        \"hyper_params\": \"gAJYAAAAAHEALg==\",\n        \"data_config\": \"gAJYAAAAAHEALg==\",\n        \"other_config\": \"gAJYAAAAAHEALg==\",\n        \"status\": 0,\n        \"time_created\": \"2020-11-04T10:36:23.567744+08:00\",\n        \"related_project\": 1\n    },\n    \"status\": 200\n}"
				}
			]
		},
		{
			"name": "Select Feature for Specify Dataset",
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": ""
				}
			},
			"response": []
		},
		{
			"name": "Set Hyperparams For Specify Project (Commit Job)",
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": ""
				}
			},
			"response": []
		},
		{
			"name": "Run Job by Job Id",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": ""
				}
			},
			"response": []
		},
		{
			"name": "Get Job Status",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": ""
				}
			},
			"response": []
		}
	],
	"protocolProfileBehavior": {}
}